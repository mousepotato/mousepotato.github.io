<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>鼠标土豆</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://anotherbug.com/"/>
  <updated>2016-12-13T23:39:12.000Z</updated>
  <id>https://anotherbug.com/</id>
  
  <author>
    <name>mousepotato</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>how to setup multiple github ssh keys</title>
    <link href="https://anotherbug.com/2016/12/13/how-to-setup-multiple-github-ssh-key/"/>
    <id>https://anotherbug.com/2016/12/13/how-to-setup-multiple-github-ssh-key/</id>
    <published>2016-12-13T23:25:43.000Z</published>
    <updated>2016-12-13T23:39:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-create-multiple-ssh-key"><a href="#1-create-multiple-ssh-key" class="headerlink" title="1. create multiple ssh key"></a>1. create multiple ssh key</h2><pre><code>ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;
</code></pre><p>for example, 2 keys create at:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~<span class="regexp">/.ssh/i</span>d_rsa</div><div class="line">~<span class="regexp">/.ssh/i</span>d_rsa_sli_racingwithhorse</div></pre></td></tr></table></figure>
<h2 id="2-then-add-these-two-keys-as-following"><a href="#2-then-add-these-two-keys-as-following" class="headerlink" title="2. then, add these two keys as following"></a>2. then, add these two keys as following</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ssh-<span class="keyword">add</span><span class="bash"> ~/.ssh/id_rsa</span></div><div class="line">ssh-<span class="keyword">add</span><span class="bash"> ~/.ssh/id_rsa_sli_racingwithhorse</span></div></pre></td></tr></table></figure>
<p>check your saved keys using:</p>
<pre><code>ssh-add -l
</code></pre><h2 id="3-modify-the-ssh-config"><a href="#3-modify-the-ssh-config" class="headerlink" title="3. modify the ssh config"></a>3. modify the ssh config</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">cd ~/.ssh/</div><div class="line">touch config</div><div class="line"></div><div class="line">$==&gt; cat config</div><div class="line"><span class="selector-id">#gmail</span><span class="selector-class">.com</span> account</div><div class="line">Host github<span class="selector-class">.com</span></div><div class="line">    HostName github<span class="selector-class">.com</span></div><div class="line">    User git</div><div class="line">    IdentityFile ~/.ssh/id_rsa</div><div class="line"></div><div class="line"><span class="selector-id">#racingwithhorse</span> account</div><div class="line">Host github<span class="selector-class">.com-racingwithhorse</span></div><div class="line">    HostName github<span class="selector-class">.com</span></div><div class="line">    User git</div><div class="line">    IdentityFile ~/.ssh/id_rsa_sli_racingwithhorse</div></pre></td></tr></table></figure>
<h2 id="4-clone-you-repo-and-modify-your-git-config"><a href="#4-clone-you-repo-and-modify-your-git-config" class="headerlink" title="4. clone you repo and modify your git config"></a>4. clone you repo and modify your git config</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config user<span class="selector-class">.name</span> <span class="string">"racingwithhorse"</span></div><div class="line">git config user<span class="selector-class">.email</span> <span class="string">"xxx@xxx.xxx"</span></div></pre></td></tr></table></figure>
<p>then inside the cloned git repository</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cat .git/config</div><div class="line">[remote <span class="string">"origin"</span>]</div><div class="line">	url = git<span class="variable">@github</span>.com-<span class="symbol">racingwithhorse:</span>racingwithhorse/racingwithhorse.github.io.git</div><div class="line">	fetch = +refs/heads/*<span class="symbol">:refs/remotes/origin/*</span></div></pre></td></tr></table></figure>
<p>That’s it!</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-create-multiple-ssh-key&quot;&gt;&lt;a href=&quot;#1-create-multiple-ssh-key&quot; class=&quot;headerlink&quot; title=&quot;1. create multiple ssh key&quot;&gt;&lt;/a&gt;1. create 
    
    </summary>
    
      <category term="Technique" scheme="https://anotherbug.com/categories/Technique/"/>
    
    
      <category term="Git" scheme="https://anotherbug.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>hexo-blog</title>
    <link href="https://anotherbug.com/2016/12/12/hexo-blog/"/>
    <id>https://anotherbug.com/2016/12/12/hexo-blog/</id>
    <published>2016-12-13T00:24:01.000Z</published>
    <updated>2016-12-13T00:51:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Test-hexo-blog"><a href="#Test-hexo-blog" class="headerlink" title="Test hexo blog"></a>Test hexo blog</h1><p>This is a test</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Test-hexo-blog&quot;&gt;&lt;a href=&quot;#Test-hexo-blog&quot; class=&quot;headerlink&quot; title=&quot;Test hexo blog&quot;&gt;&lt;/a&gt;Test hexo blog&lt;/h1&gt;&lt;p&gt;This is a test&lt;/p&gt;

    
    </summary>
    
      <category term="Technique" scheme="https://anotherbug.com/categories/Technique/"/>
    
    
      <category term="test" scheme="https://anotherbug.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Half Ironman santa cruz 70.3 candidates statistics</title>
    <link href="https://anotherbug.com/2016/05/18/half-ironman-candidate-statistics/"/>
    <id>https://anotherbug.com/2016/05/18/half-ironman-candidate-statistics/</id>
    <published>2016-05-18T07:00:00.000Z</published>
    <updated>2016-12-13T00:57:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>Since I will be attending Half Ironman santa cruz 70.3 race, I would love to know something about our atheletes.<br>The online website provides the registered candidates information. So just with a bit hack, you will know something.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/awk -f</div><div class="line">#</div><div class="line"># awk -f vis.awk output/clean.csv</div><div class="line">#</div><div class="line"></div><div class="line">BEGIN &#123;</div><div class="line">        FS=","</div><div class="line">        F_Count=0</div><div class="line">        F_60_Plus=0</div><div class="line">        F_50_to_60=0</div><div class="line">        F_40_to_50=0</div><div class="line">        F_30_to_40=0</div><div class="line">        F_30_Minus=0</div><div class="line"></div><div class="line">        M_Count=0</div><div class="line">        M_60_Plus=0</div><div class="line">        M_50_to_60=0</div><div class="line">        M_40_to_50=0</div><div class="line">        M_30_to_40=0</div><div class="line">        M_30_Minus=0</div><div class="line"></div><div class="line">        Less_than_me=0</div><div class="line">        Less_than_me_M=0</div><div class="line">        Less_than_me_F=0</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;</div><div class="line">    if($3 ~ /F/)&#123;</div><div class="line">       # print $0</div><div class="line">        F_Count++</div><div class="line">        if ( $4 &gt;= 60)&#123;</div><div class="line">            F_60_Plus++</div><div class="line">        &#125; else if ($4 &gt;= 50) &#123;</div><div class="line">            F_50_to_60++</div><div class="line">        &#125; else if ($4 &gt;= 40) &#123;</div><div class="line">            F_40_to_50++</div><div class="line">        &#125; else if ($4 &gt;= 30) &#123;</div><div class="line">            F_30_to_40++</div><div class="line">        &#125; else if ($4 &lt; 30) &#123;</div><div class="line">            F_30_Minus++</div><div class="line">        &#125;</div><div class="line">    &#125; else &#123;</div><div class="line">        M_Count++</div><div class="line">        if ( $4 &gt;= 60)&#123;</div><div class="line">            M_60_Plus++</div><div class="line">        &#125; else if ($4 &gt;= 50) &#123;</div><div class="line">            M_50_to_60++</div><div class="line">        &#125; else if ($4 &gt;= 40) &#123;</div><div class="line">            M_40_to_50++</div><div class="line">        &#125; else if ($4 &gt;= 30) &#123;</div><div class="line">            M_30_to_40++</div><div class="line">        &#125; else if ($4 &lt; 30) &#123;</div><div class="line">            M_30_Minus++</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    if ($4 &lt;28) &#123;</div><div class="line">        Less_than_me++</div><div class="line">    &#125;</div><div class="line">    if ($4&lt;28 &amp;&amp; $3 ~ /F/) &#123;</div><div class="line">        Less_than_me_F++</div><div class="line">    &#125;</div><div class="line">    if ($4&lt;28 &amp;&amp; $3 ~ /M/) &#123;</div><div class="line">        #print $0</div><div class="line">        Less_than_me_M++</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">END &#123;</div><div class="line">    print "-------------------------------------"</div><div class="line">    print "Female counts: " F_Count</div><div class="line">    print "Female age &gt;=60: " F_60_Plus</div><div class="line">    print "Female age between 50 to 60: " F_50_to_60</div><div class="line">    print "Female age between 40 to 50: " F_40_to_50</div><div class="line">    print "Female age between 30 to 40: " F_30_to_40</div><div class="line">    print "Female age under 30: " F_30_Minus</div><div class="line"></div><div class="line">    print "-------------------------------------"</div><div class="line">    print "Male counts: " M_Count</div><div class="line">    print "Male age &gt;=60: " M_60_Plus</div><div class="line">    print "Male age between 50 to 60: " M_50_to_60</div><div class="line">    print "Male age between 40 to 50: " M_40_to_50</div><div class="line">    print "Male age between 30 to 40: " M_30_to_40</div><div class="line">    print "Male age under 30: " M_30_Minus</div><div class="line">    print "-------------------------------------"</div><div class="line">    print "Less than me: " Less_than_me</div><div class="line">    print "Less than me female: " Less_than_me_F</div><div class="line">    print "Less than me male: " Less_than_me_M</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The result is…</p>
<p><img src="/assets/images/2016/05/18/half-ironman-stats.png" alt="athelets-stat"></p>
<p>Et voila!!</p>
]]></content>
    
    <summary type="html">
    
      Half Ironman santa cruz 70.3 candidates statistics
    
    </summary>
    
      <category term="Technique" scheme="https://anotherbug.com/categories/Technique/"/>
    
    
      <category term="awk" scheme="https://anotherbug.com/tags/awk/"/>
    
      <category term="shell" scheme="https://anotherbug.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Screen scrollback</title>
    <link href="https://anotherbug.com/2016/02/01/screen-scrollback/"/>
    <id>https://anotherbug.com/2016/02/01/screen-scrollback/</id>
    <published>2016-02-01T08:00:00.000Z</published>
    <updated>2016-12-13T00:48:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设置screen支持长scrollback"><a href="#设置screen支持长scrollback" class="headerlink" title="设置screen支持长scrollback"></a>设置screen支持长scrollback</h2><ol>
<li><p>In <code>~/.screenrc</code> add or set <code>defscrollback 50000</code> use 50000 or any number you want</p>
</li>
<li><p>In your screen, checking by <code>ctrl + a + i</code>, it will show your current scrollback settings</p>
</li>
<li><p>To enter scrollback/copy mode, using <code>ctrl + a + [</code></p>
</li>
<li><p>Use <code>ctrl + u</code>, <code>ctrl + d</code>, <code>ctrl + f</code> and <code>ctrl + b</code> for happy scolling</p>
</li>
</ol>
<p>Et voila!!</p>
]]></content>
    
    <summary type="html">
    
      screen scrollback setting
    
    </summary>
    
      <category term="Technique" scheme="https://anotherbug.com/categories/Technique/"/>
    
    
      <category term="Ubuntu" scheme="https://anotherbug.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="https://anotherbug.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Bash pattern match</title>
    <link href="https://anotherbug.com/2016/01/01/Bash-pattern-match/"/>
    <id>https://anotherbug.com/2016/01/01/Bash-pattern-match/</id>
    <published>2016-01-01T08:00:00.000Z</published>
    <updated>2016-12-13T00:53:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-起因：Shell-获取文件名和后缀名"><a href="#1-起因：Shell-获取文件名和后缀名" class="headerlink" title="1. 起因：Shell 获取文件名和后缀名"></a>1. 起因：Shell 获取文件名和后缀名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[_posts] ==&gt;&gt; file=&quot;A-Tale-Of-Two-Cities.pdf&quot;</div><div class="line">[_posts] ==&gt;&gt; echo &quot;$&#123;file%.*&#125;&quot;</div><div class="line">A-Tale-Of-Two-Cities</div><div class="line">[_posts] ==&gt;&gt; echo &quot;$&#123;file##*.&#125;&quot;</div><div class="line">pdf</div></pre></td></tr></table></figure>
<h2 id="2-基于-Pattern-Matching-的子串替换"><a href="#2-基于-Pattern-Matching-的子串替换" class="headerlink" title="2. 基于 Pattern Matching 的子串替换"></a>2. 基于 Pattern Matching 的子串替换</h2><p><code>${str/$old/$new}</code>  替换第一个。<br><code>${str//$old/$new}</code> 替换所有。</p>
<p>注意：不能使用正则表达式，只能使用 ?<em> 的Shell扩展。只能用shell通配符如 `</em>?  [list] [!list] [a-z]`。</p>
<p><code>${str/#$old/$new}</code> 替换开头。如果str以old串开头，则替换。<br><code>${str/%$old/$new}</code> 替换结尾。如果str以old串结尾，则替换。</p>
<p><strong>[note]</strong> <code>#</code>和<code>%</code>一个是替换开头，一个是替换结尾。可以这么记忆。键盘上<code>#</code>在<code>%</code>前面。所以<code>#</code>是替换开头，<code>%</code>是替换结尾。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">[_posts] ==&gt;&gt; str=&quot;Hello World&quot;</div><div class="line">[_posts] ==&gt;&gt; echo $&#123;str/o/O&#125;</div><div class="line">HellO World</div><div class="line">[_posts] ==&gt;&gt; echo $&#123;str//o/O&#125;</div><div class="line">HellO WOrld</div><div class="line"></div><div class="line">[_posts] ==&gt;&gt; str=&quot;Hello World&quot;</div><div class="line">[_posts] ==&gt;&gt; echo $&#123;str/#He/he&#125;</div><div class="line">Hello World</div><div class="line">[_posts] ==&gt;&gt; echo $&#123;str/#o/he&#125;</div><div class="line">Hello World</div><div class="line"></div><div class="line">[_posts] ==&gt;&gt; str=&quot;Hello World&quot;</div><div class="line">[_posts] ==&gt;&gt; echo $&#123;str/%He/he&#125;</div><div class="line">Hello World</div><div class="line">[_posts] ==&gt;&gt; echo $&#123;str/%ld/lD&#125;</div><div class="line">Hello WorlD</div></pre></td></tr></table></figure>
<p>一个例子: 将环境变量PATH的各个目录分开，每行显示一个。就是讲<code>:</code>转换成<code>\n</code>就可以实现。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[_posts] ==&gt;&gt; echo -e $&#123;PATH//:/&quot;\n&quot;&#125;</div><div class="line">/Library/Frameworks/Python.framework/Versions/3.5/bin</div><div class="line">/Library/Frameworks/Python.framework/Versions/2.7/bin</div><div class="line">/usr/local/bin</div><div class="line">/usr/sbin</div><div class="line">...</div></pre></td></tr></table></figure>
<h2 id="3-基于-Pattern-Matching-的子串删除"><a href="#3-基于-Pattern-Matching-的子串删除" class="headerlink" title="3. 基于 Pattern Matching 的子串删除"></a>3. 基于 Pattern Matching 的子串删除</h2><p>子串删除是一种特殊的替换</p>
<p><code>${str/$sub}</code>     将str中第一个sub子串删除<br><code>${str//$sub}</code>    将str中所有sub子串删除<br><code>${str#$prefix}</code>  去头，从开头去除最短匹配前缀<br><code>${str##$prefix}</code> 去头，从开头去除最长匹配前缀<br><code>${str%$suffix}</code>  去尾，从结尾去除最短匹配后缀<br><code>${str%%$suffix}</code> 去尾，从结尾去除最长匹配后缀</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[_posts] ==&gt;&gt; str=&quot;Hello World&quot;</div><div class="line">[_posts] ==&gt;&gt; echo $&#123;str#He&#125;</div><div class="line">llo World</div><div class="line">[_posts] ==&gt;&gt; echo $&#123;str#He*o&#125;</div><div class="line">World</div><div class="line">[_posts] ==&gt;&gt; echo $&#123;str##He*o&#125;</div><div class="line">rld</div><div class="line"></div><div class="line">[_posts] ==&gt;&gt; prefix=&quot;*o&quot;</div><div class="line">[_posts] ==&gt;&gt; echo $&#123;str#$prefix&#125;</div><div class="line">World</div><div class="line">[_posts] ==&gt;&gt; echo $&#123;str##$prefix&#125;</div><div class="line">rld</div><div class="line"></div><div class="line">[_posts] ==&gt;&gt; suffix=&quot;o*&quot;</div><div class="line">[_posts] ==&gt;&gt; echo $&#123;str%$suffix&#125;</div><div class="line">Hello W</div><div class="line">[_posts] ==&gt;&gt; echo $&#123;str%%$suffix&#125;</div><div class="line">Hell</div></pre></td></tr></table></figure>
<p>一个例子：获取文件扩展名,如最前面的介绍。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[_posts] ==&gt;&gt; filename=&quot;A-cat.jpg&quot;</div><div class="line">[_posts] ==&gt;&gt; echo $&#123;filename##*.&#125;</div><div class="line">jpg</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      Bash pattern match
    
    </summary>
    
      <category term="Technique" scheme="https://anotherbug.com/categories/Technique/"/>
    
    
      <category term="Ubuntu" scheme="https://anotherbug.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="https://anotherbug.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Fitbit HR heart rate data monitoring</title>
    <link href="https://anotherbug.com/2015/12/31/Fitbit-HR-data-monitoring/"/>
    <id>https://anotherbug.com/2015/12/31/Fitbit-HR-data-monitoring/</id>
    <published>2015-12-31T08:00:00.000Z</published>
    <updated>2016-12-13T00:48:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Fitbit-HR"><a href="#1-Fitbit-HR" class="headerlink" title="1. Fitbit HR"></a>1. Fitbit HR</h2><p>Fitbit HR 提供了全天候的心率 (heart rate) 数据。HR数据可以反应很多的指标（健康，活动量），甚至是什么时候洗澡或者…。除了HR数据，还有HRV (Heart Rate Variablity)也很常用。这部分好像Fitbit HR还不支持。需要精确度更好的设备。比如 Garmin HR Run.</p>
<p>一般通过fitbit app不能够得到每天的HR数据。估计需要付费成为会员才可以看到这部分。好在fitbit提供了API，可以自己获取。</p>
<h2 id="2-获取-Fitbit-HR-数据"><a href="#2-获取-Fitbit-HR-数据" class="headerlink" title="2. 获取 Fitbit HR 数据"></a>2. 获取 Fitbit HR 数据</h2><p>首先去 <a href="https://dev.fitbit.com/apps" target="_blank" rel="external">Fitbit Dev</a> 注册一个app,注意如果你想获取到精确到秒级别心率数据，选择app的类型是 personal, fitbit对这个好像有限制。如前面所说，HR数据能反应太多。。。</p>
<p>注册以后拿到<code>ClientID</code>, <code>Client_Secret</code>然后就是标准的<code>OAuth 2</code> 的应用验证。推荐 node js开源的包 <a href="https://github.com/peebles/fitbit-oauth2" target="_blank" rel="external">fitbit-oauth2</a></p>
<p>验证通过获取每天精确到秒级别的心率数据的uri是</p>
<pre><code>https://api.fitbit.com/1/user/-/activities/heart/date/today/1d/1sec.json
</code></pre><h2 id="3-显示-Fitbit-HR-数据"><a href="#3-显示-Fitbit-HR-数据" class="headerlink" title="3. 显示 Fitbit HR 数据"></a>3. 显示 Fitbit HR 数据</h2><p>获得了数据以后，怎么用呢？最简单的办法是plot，可以直观的看。这里推荐 <a href="https://plot.ly/" target="_blank" rel="external">Plotly</a> 应用。免费使用，不过作出的图需要公开。注册，获取一个<code>API_KEY</code>。<br>然后在使用 node js 的 plotly库 <a href="https://github.com/plotly/plotly-nodejs" target="_blank" rel="external">plotly-nodej</a>。 Then you are good to go…</p>
<p>简单的画图 nodejs 实现:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">app.get(<span class="string">'/plot/:bday'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</div><div class="line">  bday = req.params.bday;</div><div class="line">  fs.readFile(<span class="string">'./bpm/bpm-'</span> + bday + <span class="string">'.json'</span>, <span class="string">'utf8'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (err) <span class="keyword">throw</span> err; <span class="comment">// we'll not consider error handling for now</span></div><div class="line">    <span class="keyword">var</span> profile = <span class="built_in">JSON</span>.parse(data);</div><div class="line">    res.send(<span class="string">'&lt;pre&gt;'</span> + <span class="built_in">JSON</span>.stringify(profile[</div><div class="line">      <span class="string">'activities-heart-intraday'</span>], <span class="literal">null</span>, <span class="number">2</span>) + <span class="string">'&lt;/pre&gt;'</span>);</div><div class="line"></div><div class="line">    <span class="comment">// plot here</span></div><div class="line">    <span class="keyword">var</span> x = [];</div><div class="line">    <span class="keyword">var</span> y = [];</div><div class="line">    <span class="keyword">var</span> plotly = <span class="built_in">require</span>(<span class="string">'plotly'</span>)(<span class="string">'mouse_potato'</span>, <span class="string">'rmoeisc3m8'</span>);</div><div class="line">    <span class="keyword">var</span> graphOptions = &#123;</div><div class="line">      <span class="attr">fileopt</span>: <span class="string">"overwrite"</span>,</div><div class="line">      <span class="attr">filename</span>: <span class="string">"bpm-"</span> + bday</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> intradaydata = profile[<span class="string">'activities-heart-intraday'</span>];</div><div class="line">    <span class="keyword">var</span> dataset = intradaydata[<span class="string">'dataset'</span>];</div><div class="line">    <span class="comment">//console.log(dataset.length);</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; dataset.length; i++) &#123;</div><div class="line">      x.push(dataset[i][<span class="string">'time'</span>]);</div><div class="line">      y.push(dataset[i][<span class="string">'value'</span>]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> data = [x, y];</div><div class="line">    plotly.plot(data, graphOptions, <span class="function"><span class="keyword">function</span>(<span class="params">err, msg</span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(msg);</div><div class="line">     &#125;);</div><div class="line">  &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>怎么样，想看看我圣诞节那天的心率么？-:) <a href="https://plot.ly/~mouse_potato/24" target="_blank" rel="external">bpm-2015-12-24</a></p>
<h2 id="4-One-more-thing…"><a href="#4-One-more-thing…" class="headerlink" title="4. One more thing…"></a>4. One more thing…</h2><p>怎么偷懒，实现了一个每天夜里2:30AM 把前天的心率数据读取出来，作好图然后发一封链接邮件到我邮箱。<br>使用 <a href="https://github.com/nodemailer/nodemailer" target="_blank" rel="external">nodemailer</a> 吧。记得如果使用gmail，需要打开 <code>gmail allow less secure apps</code><br><a href="https://support.google.com/accounts/answer/6010255?hl=en" target="_blank" rel="external">Allow less secure apps</a></p>
<p>代码是这样，</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> nodemailer = <span class="built_in">require</span>(<span class="string">'nodemailer'</span>);</div><div class="line"></div><div class="line"><span class="comment">// create reusable transporter object using the default SMTP transport</span></div><div class="line"><span class="comment">// Put your email username and password here</span></div><div class="line"><span class="keyword">var</span> transporter = nodemailer.createTransport(</div><div class="line">  <span class="string">'smtps://MYEMAILUSERNAME%40gmail.com:MYPASSWORD@smtp.gmail.com'</span></div><div class="line">);</div><div class="line"></div><div class="line"><span class="comment">// setup e-mail data with unicode symbols</span></div><div class="line"><span class="keyword">var</span> mailOptions = &#123;</div><div class="line">  <span class="attr">from</span>: <span class="string">"HR Monitoring &lt;xxx@gmail.com&gt;"</span>,</div><div class="line">  <span class="attr">to</span>: <span class="string">"myusername@gmail.com"</span>,</div><div class="line">  <span class="attr">subject</span>: <span class="string">"Your yesterday's HR is ready"</span>,</div><div class="line">  <span class="attr">text</span>: msg.url,</div><div class="line">  <span class="attr">html</span>: <span class="string">"Please click &lt;a href="</span> + msg.url + <span class="string">"&gt;plot&lt;/a&gt; for the data."</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// send mail with defined transport object</span></div><div class="line">transporter.sendMail(mailOptions, <span class="function"><span class="keyword">function</span>(<span class="params">error, info</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (error) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">console</span>.log(error);</div><div class="line">  &#125;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'Message sent: '</span> + info.response);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>然后建立一个 cron job, 去执行一个 shell 脚本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">TODAY=`date +%F`</div><div class="line">YESTERDAY=$(date --date yesterday &quot;+%F&quot;)</div><div class="line"></div><div class="line">ACCESS_TOKEN=$(cat fb-token.json |jq &quot;.access_token&quot;)</div><div class="line">echo $ACCESS_TOKEN</div><div class="line"></div><div class="line">sleep 3</div><div class="line">curl -H &quot;Authorization: Bearer $ACCESS_TOKEN&quot; http://yourdomain.com/getbpm/$YESTERDAY</div><div class="line">sleep 7</div><div class="line">curl --ipv4  &quot;http://yourdomain/plot/$YESTERDAY&quot; -v</div></pre></td></tr></table></figure>
<p>That’s it!!!</p>
]]></content>
    
    <summary type="html">
    
      Fitbit HR heart rate data monitoring
    
    </summary>
    
      <category term="Personal" scheme="https://anotherbug.com/categories/Personal/"/>
    
    
      <category term="Hacks" scheme="https://anotherbug.com/tags/Hacks/"/>
    
      <category term="Life" scheme="https://anotherbug.com/tags/Life/"/>
    
      <category term="Nodejs" scheme="https://anotherbug.com/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Box content APIs example</title>
    <link href="https://anotherbug.com/2015/11/15/Box-content-APIs-example/"/>
    <id>https://anotherbug.com/2015/11/15/Box-content-APIs-example/</id>
    <published>2015-11-15T08:00:00.000Z</published>
    <updated>2016-12-13T00:48:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天实现了新建一个box app并通过Box API读取用户box里面文件的程序。记录如下。</p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol>
<li>使用nodejs环境搭建回调服务器</li>
<li>好像没用了。。。。（box账户和developer页面）</li>
</ol>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>box 的api实现了oAuth2标准。所以不难使用。参考了网上已有的nodejs实现。<br>注意box需要的回调地址是加密的https请求，不支持http。所以需要首先实现一个nodejs的https服务器。网上也有。。。</p>
<p>代码</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> crypto = require(<span class="string">'crypto'</span>), fs = require(<span class="string">"fs"</span>),http = require(<span class="string">"http"</span>);var privateKey = fs.readFileSync(<span class="string">'privatekey.pem'</span>).toString(); var certificate = fs.readFileSync(<span class="string">'certificate.pem'</span>).toString();var credentials = crypto.createCredentials(&#123;key: privateKey, cert: certificate&#125;);var handler = function (req, res) &#123; res.writeHead(<span class="number">200</span>, &#123;<span class="string">'Content-Type'</span>: <span class="string">'text/plain'</span>&#125;); res.end(<span class="string">'Hello World\n'</span>);&#125;;var server = http.createServer(); server.setSecure(credentials); server.addListener(<span class="string">"request"</span>, handler); server.listen(<span class="number">8000</span>);</div></pre></td></tr></table></figure>
<p>其中生成privatekey.pem 和 certificate.pem 的方法是:</p>
<pre><code>openssl genrsa -out privatekey.pem 1024

openssl req -new -key privatekey.pem -out certrequest.csr

openssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem
</code></pre><p>然后就是找到最新版本的 API document去读一下: <a href="https://developers.box.com/docs-overview/" target="_blank" rel="external">https://developers.box.com/docs-overview/</a></p>
<p>然后去box developer 里面注册一个app，注意选使用content API。然后获取<code>client_id</code>, <code>client_secret</code>, 和 <code>redirect_uri</code><br>这里的 <code>redirect_uri</code>我填写的是 <code>https://localhost:3443/boxdemo/redirect</code> (对照后面的代码)</p>
<p>参考网上实现的代码链接 <a href="https://github.com/mousepotato/box-api-ex.git" target="_blank" rel="external">github: box-api-ex</a></p>
]]></content>
    
    <summary type="html">
    
      使用Box API的例子
    
    </summary>
    
      <category term="Technique" scheme="https://anotherbug.com/categories/Technique/"/>
    
    
      <category term="Programming" scheme="https://anotherbug.com/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode remove duplicates from sorted array</title>
    <link href="https://anotherbug.com/2015/02/07/Leetcode-remove-duplicates-in-sorted-array/"/>
    <id>https://anotherbug.com/2015/02/07/Leetcode-remove-duplicates-in-sorted-array/</id>
    <published>2015-02-07T08:00:00.000Z</published>
    <updated>2016-12-13T00:47:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.</p>
<p>Do not allocate extra space for another array, you must do this in place with constant memory.</p>
<p>For example, Given input array A = [1,1,2], Your function should return length = 2, and A is now [1,2]</p>
<p>写了几次，每一次都有不同的感受。</p>
<p>版本一：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="keyword">int</span> [] A)</span></span>&#123;</div><div class="line">	   <span class="keyword">if</span> (A == <span class="keyword">null</span> || A.length == <span class="number">0</span>) &#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	   &#125;		      </div><div class="line">        <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span> (j &lt; A.length) &#123;</div><div class="line">           <span class="keyword">if</span> (A[i] != A[j++]) &#123;</div><div class="line">               A[++i] = A[j];</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line">       <span class="keyword">return</span> i + <span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这个版本有错误，原因是数组越界，虽然while循环判断数字长度，但是在if判断里面使用了j++，这个其实没事，但是后面的A[++i] = A[j]，要访问A[j]，此时可能导导致IndexOutOfBound。无经验造成的。</p>
<p>版本二：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="keyword">int</span> [] A)</span></span>&#123;</div><div class="line"> 		<span class="keyword">if</span> (A == <span class="keyword">null</span> || A.length == <span class="number">0</span>) &#123;</div><div class="line">			<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">int</span> size = <span class="number">0</span>;</div><div class="line">		<span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">		<span class="keyword">while</span> (i &lt; A.length)&#123;</div><div class="line">			<span class="keyword">if</span> (A[size] != A[i]) &#123;</div><div class="line">				A[++size] = A[i];</div><div class="line">			&#125;</div><div class="line">			i++;</div><div class="line">		&#125;</div><div class="line">	</div><div class="line">	    <span class="keyword">return</span> size + <span class="number">1</span>;		</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>版本二通过测试，也使用了有意义的变量size作为输出。但是这个代码还是反应不出作者的思想和对题目的理解。</p>
<p>版本三：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="keyword">int</span>[] A)</span> </span>&#123;</div><div class="line">	<span class="keyword">if</span> (A == <span class="keyword">null</span> || A.length == <span class="number">0</span>) &#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">int</span> walker = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> runner = <span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span> (runner &lt; A.length) &#123;</div><div class="line">		<span class="keyword">if</span> (A[runner] != A[walker]) &#123;</div><div class="line">			A[++walker] = A[runner];</div><div class="line">		&#125;</div><div class="line">		runner++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> walker + <span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>版本三，变量使用了runner和walker，一看就明白是写代码者理解题目的快慢指针的思想。堪称完美。</p>
<p>此乃刷题者三种境界，共勉！</p>
]]></content>
    
    <summary type="html">
    
      Leetcode 刷题有感 Leetcode remove duplicates from sorted array
    
    </summary>
    
      <category term="Technique" scheme="https://anotherbug.com/categories/Technique/"/>
    
    
      <category term="Algorithm" scheme="https://anotherbug.com/tags/Algorithm/"/>
    
      <category term="Leetcode" scheme="https://anotherbug.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>使用 Node JS 批量下载网站的图片</title>
    <link href="https://anotherbug.com/2013/11/28/Download-web-pictures-using-Nodejs/"/>
    <id>https://anotherbug.com/2013/11/28/Download-web-pictures-using-Nodejs/</id>
    <published>2013-11-28T08:00:00.000Z</published>
    <updated>2016-12-13T00:47:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-起因"><a href="#1-起因" class="headerlink" title="1. 起因"></a>1. 起因</h2><p>最近看到 <a href="http://photo.fhl.net/main/holy/index.html" target="_blank" rel="external">网站 fhl.net</a> 上有一系列《圣地旅游》的照片，个人很喜欢，想把它下载下来保存。问题是该网站上有67页，每页有35张照片，也就是总共有2345张照片，同时我还想讲网页上照片的介绍作为照片的名称保存，这样方便以后查看。所以，问题是如何做呢？</p>
<h2 id="2-所需-tools"><a href="#2-所需-tools" class="headerlink" title="2. 所需 tools"></a>2. 所需 tools</h2><p>鉴于最近爱上了 <a href="http://nodejs.org/" target="_blank" rel="external">Node.js</a> 这一神奇的工具。打算用它试试。</p>
<p>2.1 用到的插件有</p>
<ul>
<li>request <code>npm install request</code>  处理http request</li>
<li>cheerio <code>npm install cheerio</code>  Html DOM 处理</li>
<li>iconv-lite <code>npm install iconv-lite</code>  处理中文字符转码</li>
<li>wget <code>npm install wget</code>  图片下载工具</li>
</ul>
<h2 id="3-代码-Code"><a href="#3-代码-Code" class="headerlink" title="3. 代码 Code"></a>3. 代码 Code</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> request = <span class="built_in">require</span>(<span class="string">"request"</span>);</div><div class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">"cheerio"</span>);</div><div class="line"><span class="keyword">var</span> iconv = <span class="built_in">require</span>(<span class="string">'iconv-lite'</span>);</div><div class="line"><span class="keyword">var</span> wget = <span class="built_in">require</span>(<span class="string">'wget'</span>);</div><div class="line"></div><div class="line"><span class="comment">// loop through all 67 html pages</span></div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">67</span>; i++)&#123;</div><div class="line"></div><div class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;request(&#123;</div><div class="line">      <span class="attr">uri</span>: <span class="string">"http://photo.fhl.net/main/holy/"</span>+i+<span class="string">"index.html"</span>,</div><div class="line">    <span class="attr">encoding</span>:<span class="literal">null</span></div><div class="line">  &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">error, response, body</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> str = iconv.decode(<span class="keyword">new</span> Buffer(body), <span class="string">"big5"</span>);</div><div class="line">      <span class="keyword">var</span> $ = cheerio.load(str);</div><div class="line">     </div><div class="line">      $(<span class="string">'table a'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">          <span class="keyword">var</span> link = $(<span class="keyword">this</span>);</div><div class="line">          <span class="keyword">var</span> text = link.text();</div><div class="line">          <span class="keyword">var</span> href = link.attr(<span class="string">"href"</span>);</div><div class="line">          <span class="comment">// href = "holy2351.html"</span></div><div class="line">          <span class="comment">// http://photo.fhl.net/img/holy/2351.jpg</span></div><div class="line">          <span class="comment">// console.log(text + "http://photo.fhl.net/img/holy/" + href.substr(4,4) + ".jpg");</span></div><div class="line"></div><div class="line">      <span class="keyword">var</span> src = <span class="string">"http://photo.fhl.net/img/holy/"</span> + href.substr(<span class="number">4</span>,<span class="number">4</span>) + <span class="string">".jpg"</span>;</div><div class="line">      <span class="comment">// var output ="/Users/shuangjiang/playpen/holypic/"+text.replace(/\s+/g,"");</span></div><div class="line">      <span class="keyword">var</span> output =<span class="string">"/Users/shuangjiang/playpen/holypic/"</span>+text+<span class="string">".jpg"</span>;</div><div class="line">      <span class="keyword">var</span> download = wget.download(src,output);</div><div class="line">      download.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">output</span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">"download all the pics"</span>);</div><div class="line">      &#125;);</div><div class="line">    &#125;);</div><div class="line">  &#125;);&#125;)(i); <span class="comment">// closure</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>That’s it!!</p>
]]></content>
    
    <summary type="html">
    
      介绍如何使用Node Js 批量下载网站上的图片，使用的技术包括Node Js插件的使用，编码转换，HTML DOM处理，Javascript 闭包等等。
    
    </summary>
    
      <category term="Technique" scheme="https://anotherbug.com/categories/Technique/"/>
    
    
      <category term="Nodejs" scheme="https://anotherbug.com/tags/Nodejs/"/>
    
      <category term="Programming" scheme="https://anotherbug.com/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>Screen 使用之无废话5行命令</title>
    <link href="https://anotherbug.com/2013/11/25/linux-screen-in-5-commands/"/>
    <id>https://anotherbug.com/2013/11/25/linux-screen-in-5-commands/</id>
    <published>2013-11-25T08:00:00.000Z</published>
    <updated>2016-12-13T00:47:17.000Z</updated>
    
    <content type="html"><![CDATA[<p> Linux screen in 5 command lines</p>
<hr>
<h2 id="1-建立一个-screen-shell-窗口"><a href="#1-建立一个-screen-shell-窗口" class="headerlink" title="1. 建立一个 screen shell 窗口"></a>1. 建立一个 screen shell 窗口</h2><pre><code>screen
</code></pre><h2 id="2-退出刚建立的窗口"><a href="#2-退出刚建立的窗口" class="headerlink" title="2. 退出刚建立的窗口"></a>2. 退出刚建立的窗口</h2><pre><code>ctrl+ a d
</code></pre><h2 id="3-查看已有-screen-窗口"><a href="#3-查看已有-screen-窗口" class="headerlink" title="3. 查看已有 screen 窗口"></a>3. 查看已有 screen 窗口</h2><pre><code>screen -ls
</code></pre><h2 id="4-重新进入已有-screen-窗口"><a href="#4-重新进入已有-screen-窗口" class="headerlink" title="4. 重新进入已有 screen 窗口"></a>4. 重新进入已有 screen 窗口</h2><pre><code>screen -r sessionid
</code></pre><p><code>sessionid</code> can be found by looking <code>screen -ls</code></p>
<h2 id="5-退出已有-screen-窗口"><a href="#5-退出已有-screen-窗口" class="headerlink" title="5. 退出已有 screen 窗口"></a>5. 退出已有 screen 窗口</h2><pre><code>exit
</code></pre><h2 id="6-退出全部-detached-sessions"><a href="#6-退出全部-detached-sessions" class="headerlink" title="6. 退出全部 detached sessions"></a>6. 退出全部 detached sessions</h2><pre><code>screen -ls | grep Detached | cut -d. -f1 | awk &apos;{print $1}&apos; | xargs kill
</code></pre><p>That’s it!!!</p>
]]></content>
    
    <summary type="html">
    
      Linux screen in 5 command lines
    
    </summary>
    
      <category term="Technique" scheme="https://anotherbug.com/categories/Technique/"/>
    
    
      <category term="Ubuntu" scheme="https://anotherbug.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="https://anotherbug.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>How to be efficient</title>
    <link href="https://anotherbug.com/2013/10/20/how-to-be-efficient/"/>
    <id>https://anotherbug.com/2013/10/20/how-to-be-efficient/</id>
    <published>2013-10-20T07:00:00.000Z</published>
    <updated>2016-12-13T00:47:05.000Z</updated>
    
    <content type="html"><![CDATA[<hr>
<h2 id="1-Efficiency-comes-from-familiarity-and-simplicity"><a href="#1-Efficiency-comes-from-familiarity-and-simplicity" class="headerlink" title="1. Efficiency comes from familiarity and simplicity."></a>1. Efficiency comes from familiarity and simplicity.</h2><p>高效来源于熟练，俗语说：“熟能生巧”。同样的，高效来源于简单。简单不意味着更少。 简单是对完美的追求，达到某种圆满 (completeness)，是为高效的上限（upper bound），增一分减一分都会招致破坏。正如 Albert Einstein 所说：</p>
<p><code>Any intelligent fool can make things bigger, more complex, and more violent. It takes a touch of genius -- and a lot of courage -- to move in the opposite direction.</code></p>
<h2 id="2-Admitting-your-incapabilities-say-no-to-1000-things"><a href="#2-Admitting-your-incapabilities-say-no-to-1000-things" class="headerlink" title="2. Admitting your incapabilities, say no to 1000 things."></a>2. Admitting your incapabilities, say no to 1000 things.</h2><p>You have to be focus in order to be efficient.</p>
<p>See <a href="http://zurb.com/article/744/steve-jobs-innovation-is-saying-no-to-1-0" target="_blank" rel="external">Steve Jobs: Innovation is Saying “No” to 1,000 things</a><br><code>People think focus means saying yes to the thing you&#39;ve got to focus on. But that&#39;s not what it means at all. It means saying no to the hundred other good ideas that there are. You have to pick carefully. I&#39;m actually as proud of the things we haven&#39;t done as the things I have done. Innovation is saying &quot;no&quot; to 1,000 things.</code></p>
<p>Things you need to always keep in mind like <a href="http://anotherbug.com/blog/2013/05/27/what-to-do-next-for-your-GTD-plan/">You next GTD plan</a>.</p>
<h2 id="3-Be-well-organized"><a href="#3-Be-well-organized" class="headerlink" title="3.    Be well organized."></a>3.    Be well organized.</h2><p>By saying organized, I am not meaning to have your stuff in order or a neat table. <em>Organized</em> means that you have a set of well defined <em>living style</em>, <em>systems</em> or <em>architectures</em> or whatever that could help you do every kind of jobs. You have to define them in advance and purify them for life long. See <a href="http://www.read.org.cn/html/1641-establish-and-accumulate-your-little-system.html" target="_blank" rel="external">Establish and accumulate your little system</a>.</p>
<p>That’s it!!</p>
]]></content>
    
    <summary type="html">
    
      如何高效
    
    </summary>
    
      <category term="Personal" scheme="https://anotherbug.com/categories/Personal/"/>
    
    
      <category term="GTD" scheme="https://anotherbug.com/tags/GTD/"/>
    
      <category term="Random Thoughts" scheme="https://anotherbug.com/tags/Random-Thoughts/"/>
    
  </entry>
  
  <entry>
    <title>How to revert github source code to a specific commit</title>
    <link href="https://anotherbug.com/2013/06/20/how-to-revert-github-source-code-to-a-specific-commit/"/>
    <id>https://anotherbug.com/2013/06/20/how-to-revert-github-source-code-to-a-specific-commit/</id>
    <published>2013-06-20T07:00:00.000Z</published>
    <updated>2016-12-13T00:46:57.000Z</updated>
    
    <content type="html"><![CDATA[<hr>
<p>如何将Github的代码回退到某一个指定的提交版本  </p>
<p>How to revert Github source code to a specific commit</p>
<pre><code>git reset --hard &quot;old-commit-id&quot;
git push -f
</code></pre>]]></content>
    
    <summary type="html">
    
      如何将github的代码回退到某一个指定的提交版本
    
    </summary>
    
      <category term="Technique" scheme="https://anotherbug.com/categories/Technique/"/>
    
    
      <category term="Git" scheme="https://anotherbug.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Linux 下的查看系统内存信息</title>
    <link href="https://anotherbug.com/2013/06/14/How-to-read-memory-info-under-Linux/"/>
    <id>https://anotherbug.com/2013/06/14/How-to-read-memory-info-under-Linux/</id>
    <published>2013-06-14T07:00:00.000Z</published>
    <updated>2016-12-13T00:46:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>Linux查看系统内存信息可以有如下方法：</p>
<ul>
<li><code>free</code>  </li>
<li><code>free -m</code>  </li>
<li><code>cat /proc/meminfo</code></li>
</ul>
<p>如果要查询详细到RAM规格，DDR2，DDR3可以使用：</p>
<ul>
<li><code>sudo lshw</code></li>
</ul>
<p><img src="/assets/images/2013/06/14/meminfo.png" alt="meminfo"></p>
]]></content>
    
    <summary type="html">
    
      Linux下查看系统内存的方法
    
    </summary>
    
      <category term="Technique" scheme="https://anotherbug.com/categories/Technique/"/>
    
    
      <category term="Ubuntu" scheme="https://anotherbug.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="https://anotherbug.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 下的几个文件</title>
    <link href="https://anotherbug.com/2013/06/13/Linux-dev-files/"/>
    <id>https://anotherbug.com/2013/06/13/Linux-dev-files/</id>
    <published>2013-06-13T07:00:00.000Z</published>
    <updated>2016-12-13T00:46:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>Linux 下的几个文件</p>
<p>Unix或者类 Unix系统/dev下有几个很特殊的文件.他们就是:</p>
<h2 id="1-dev-null"><a href="#1-dev-null" class="headerlink" title="1: /dev/null"></a>1: /dev/null</h2><p>这个/dev下放的是系统和用户的设备文件. null是个文件名. 被称为 the null device, <code>/dev/null</code> 这个童鞋脾气有点大,听不见别人任何话,所以呢任何话传到他耳朵里都被当成耳旁风了.当然更可恨的是他竟然还假惺惺的点头说听到了.当然他是很诚实地说的.  </p>
<p>/dev/null or the null device is a special file that discards all data written to it, but reports that the write operation succeed.   </p>
<p>所以呢,你心情不好的时候,或者你有个秘密憋的慌想说但是又怕周围人有个big mouth的时候来,可以和这个娃说说. 用程序员的黑话(jargon)说他是个’黑洞’(black hole)或者’位筒’(bit bucket).</p>
<p><img src="/assets/images/2013/06/13/dev_null.jpg" alt="devnull"></p>
<p>知道了这个,下面几个隔行如隔山的话也就好理解了.</p>
<ol>
<li>Please send complaints to <code>/dev/null</code></li>
<li>my mail got archived in <code>/dev/null</code></li>
</ol>
<p>几个扩展:</p>
<ol>
<li><code>cat /dev/null &gt; /var/log/db_log</code> (清空日志文件的内容)</li>
<li><code>&gt;/dev/null 2&gt;&amp;1</code> 的理解  </li>
</ol>
<ul>
<li><code>&gt;</code> 代表重定向到哪里，比方：<code>echo &quot;123&quot; &gt; /home/123.txt</code>  </li>
<li><code>&gt;</code> 输出给这个不听话的娃, <code>/dev/null</code>  </li>
<li><code>2&gt;</code> 表示stderr标准错误   </li>
<li><code>&amp;</code> 表示等同于的意思，<code>2&gt;&amp;1</code>，表示2的输出重定向等同于1  </li>
<li><code>1</code> 表示stdout标准输出，系统默认值是1，所以<code>&gt;/dev/null</code>等同于 <code>1&gt;/dev/null</code></li>
</ul>
<p>因此，<code>&gt;/dev/null 2&gt;&amp;1</code>也可以写成<code>1&gt; /dev/null 2&gt;&amp;1</code>  </p>
<p><code>1&gt;/dev/null</code>：首先表示标准输出重定向到空设备文件，也就是不输出任何信息到终端，说白了就是不显示任何信息。  </p>
<p><code>2&gt;&amp;1</code>：接着，标准错误输出重定向 到 标准输出，因为之前标准输出已经重定向到了空设备文件，所以标准错误输出也重定向到空设备文件。  </p>
<p>最常见的写法: <code>command &gt; file 2&gt;file</code> 与 <code>command &gt; file 2&gt;&amp;1</code>(这个效率更高点,可以从打开文件的次数角度去分析.)</p>
<h2 id="2-dev-full"><a href="#2-dev-full" class="headerlink" title="2. /dev/full"></a>2. /dev/full</h2><p>这个娃天生胃小,整天处于吃饱状态.送啥吃的来都不接受.那你说把这个家伙放在unix里面干嘛.This device is usually used when testing the behaviour of a program when it encounters a disk full error.测试某些程序在磁盘吃饱状态下的错误.</p>
<p><img src="/assets/images/2013/06/13/dev_full.jpg" alt="devfull"> </p>
<h2 id="3-dev-zero"><a href="#3-dev-zero" class="headerlink" title="3. /dev/zero"></a>3. /dev/zero</h2><p>这哥们有很的0,MS是很有钱.他实际上产生连续不断的null的流（二进制的零流),写入他的东东会丢失不见,然后呢会给你一串的null值,这个一般不好发觉./dev/zero主要的用处是用来创建一个指定长度用于初始化的空文件，就像临时交换文件.</p>
<p><img src="/assets/images/2013/06/13/dev_zero.jpg" alt="devzero"></p>
]]></content>
    
    <summary type="html">
    
      Linux 下的 /dev/null, /dev/full, /dev/zero文件介绍和使用实例。
    
    </summary>
    
      <category term="Technique" scheme="https://anotherbug.com/categories/Technique/"/>
    
    
      <category term="Ubuntu" scheme="https://anotherbug.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="https://anotherbug.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>How to make presentation using markdown</title>
    <link href="https://anotherbug.com/2013/06/12/how-to-make-presentation-using-markdown/"/>
    <id>https://anotherbug.com/2013/06/12/how-to-make-presentation-using-markdown/</id>
    <published>2013-06-12T07:00:00.000Z</published>
    <updated>2016-12-13T00:46:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>How to make presentation using markdow<br>如何使用markdown做报告</p>
<h3 id="1-安装-Markdown-Presenter"><a href="#1-安装-Markdown-Presenter" class="headerlink" title="1. 安装 Markdown Presenter"></a>1. 安装 Markdown Presenter</h3><p><a href="https://github.com/jsakamoto/MarkdownPresenter" target="_blank" rel="external">Markdown Presenter 地址</a></p>
<pre><code>git clone https://github.com/jsakamoto/MarkdownPresenter.git  
</code></pre><h3 id="2-安装Ubuntu下的WebServer-webfs"><a href="#2-安装Ubuntu下的WebServer-webfs" class="headerlink" title="2. 安装Ubuntu下的WebServer-webfs"></a>2. 安装Ubuntu下的WebServer-webfs</h3><pre><code>sudo apt-get install webfs  
</code></pre><p>或者使用python自带的web server</p>
<pre><code>python -m SimpleHTTPServer 
</code></pre><h3 id="3-新建或者编辑-md文件-presentation-md"><a href="#3-新建或者编辑-md文件-presentation-md" class="headerlink" title="3. 新建或者编辑.md文件 presentation.md"></a>3. 新建或者编辑.md文件 presentation.md</h3><pre><code>This is a slide  
Blah blah blah  
!  
This is another slide  
Yada yada yada  
</code></pre><h3 id="4-将写好的文件放到MarkdownPresenter目录下，然后运行"><a href="#4-将写好的文件放到MarkdownPresenter目录下，然后运行" class="headerlink" title="4. 将写好的文件放到MarkdownPresenter目录下，然后运行"></a>4. 将写好的文件放到<code>MarkdownPresenter</code>目录下，然后运行</h3><pre><code>python -m SimpleHTTPServer  
</code></pre><p>或者运行</p>
<pre><code>webfsd -F -p 8888 -r ~/scripts/MarkdownPresenter/ -f Presenter.html
</code></pre><h3 id="5-注意事项"><a href="#5-注意事项" class="headerlink" title="5. 注意事项"></a>5. 注意事项</h3><p><font color="red">The <code>Presenter.html</code> fetches the <code>presentation.md</code> from the server via Ajax, uses <code>Showdown.js</code> to transform it into HTML.</font><br>所以.md文件必须命名为 <code>presentation.md</code>，然后 webserver必须打开<code>Presenter.html</code>.</p>
<p>That’s it!!</p>
]]></content>
    
    <summary type="html">
    
      本文介绍如何使用Markdown编写报告。
    
    </summary>
    
      <category term="Research" scheme="https://anotherbug.com/categories/Research/"/>
    
    
      <category term="Ubuntu" scheme="https://anotherbug.com/tags/Ubuntu/"/>
    
      <category term="Markdown" scheme="https://anotherbug.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>How to install CyanogenMod on Galaxy S3</title>
    <link href="https://anotherbug.com/2013/06/11/how-to-install-CyanogenMod-on-Galaxy-S3/"/>
    <id>https://anotherbug.com/2013/06/11/how-to-install-CyanogenMod-on-Galaxy-S3/</id>
    <published>2013-06-11T07:00:00.000Z</published>
    <updated>2016-12-13T00:46:02.000Z</updated>
    
    <content type="html"><![CDATA[<hr>
<p>Galaxy S3 安装CyanogenMod</p>
<p>CyanogenMod是Android上一个开源的固件（ROM）管理和定制软件。玩转Andorid ROM必备。下面介绍如何在Galaxy S3上安装CyanogenMod。</p>
<h3 id="1-下载-CyanogenMod"><a href="#1-下载-CyanogenMod" class="headerlink" title="1. 下载 CyanogenMod"></a>1. 下载 CyanogenMod</h3><p>通过这个<a href="http://get.cm/?device=i9300" target="_blank" rel="external">链接 http://get.cm/?device=i9300</a>下载，分为三个版本：    </p>
<ul>
<li>nightly (最新版，小白鼠专用)  </li>
<li>test  （测试版本，较稳定）  </li>
<li>stable  （稳定版本）  </li>
</ul>
<p>可以根据自己喜好选择。</p>
<h3 id="2-安装-CyanogenMod"><a href="#2-安装-CyanogenMod" class="headerlink" title="2. 安装 CyanogenMod"></a>2. 安装 CyanogenMod</h3><p>将下载好的.zip文件放到S3手机上。有两种方法:</p>
<ul>
<li><p>直接将手机连接电脑上传</p>
</li>
<li><p>将手机连接电脑通过adb上传</p>
<p>./adb push ~/Downloads/cm-10.1-20130610-NIGHTLY-i9300.zip /sdcard/0/cmupdater</p>
</li>
</ul>
<h3 id="3-将S3重启进入recovery-模式进行安装"><a href="#3-将S3重启进入recovery-模式进行安装" class="headerlink" title="3. 将S3重启进入recovery 模式进行安装"></a>3. 将S3重启进入recovery 模式进行安装</h3><ul>
<li>同时按住 <code>VolumnUp + Home + Power</code>进入恢复模式  </li>
<li><p>首先必须清除 <code>cache partition</code>和 <code>wipe data/factory reset</code>  </p>
<p><img src="/assets/images/2013/06/11/recv_1.png" alt="rev1"></p>
</li>
<li><p>之后选择 <code>install zip from sdcard</code>  选择 <code>cm-10.1-20130610-NIGHTLY-i9300.zip</code></p>
<p><img src="/assets/images/2013/06/11/recv_2.png" alt="rev2"></p>
</li>
<li><p>最后选择 <code>Advanced-&gt; fix permissions</code>，然后重启。</p>
</li>
</ul>
<p><img src="/assets/images/2013/06/11/recv_3.png" alt="rev_3"></p>
<h3 id="4-安装google-play等软件"><a href="#4-安装google-play等软件" class="headerlink" title="4. 安装google play等软件"></a>4. 安装google play等软件</h3><p>默认由于版权问题CyanogenMod不自带google play等软件。通过这个连接<a href="http://goo.im/gapps" target="_blank" rel="external">下载 http://goo.im/gapps</a> 你对应版本的google 软件。将其上传到S3，然后再通过重启到恢复模式选择zip安装。  </p>
<h3 id="5-如何打开开发者设置-develop-options"><a href="#5-如何打开开发者设置-develop-options" class="headerlink" title="5. 如何打开开发者设置( {}develop options)"></a>5. 如何打开开发者设置( {}develop options)</h3><ul>
<li>打开<code>Settings -&gt; About phone-&gt;Build number</code></li>
</ul>
<p><img src="/assets/images/2013/06/11/dev_1.png" alt="dev_1"></p>
<ul>
<li>狂点<code>build number</code> 几次以后系统提示 <code>develop settings</code>已经开启。</li>
</ul>
<p><img src="/assets/images/2013/06/11/dev_2.png" alt="dev_2"></p>
<p>That’s it!!</p>
]]></content>
    
    <summary type="html">
    
      CyanogenMod是Android上一个开源的固件（ROM）管理和定制软件。玩转Andorid ROM必备。本文介绍在Galaxy S3如何安装CyanogenMod
    
    </summary>
    
      <category term="Technique" scheme="https://anotherbug.com/categories/Technique/"/>
    
    
      <category term="Android" scheme="https://anotherbug.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>What to do next for your GTD plan</title>
    <link href="https://anotherbug.com/2013/05/27/what-to-do-next-for-your-GTD-plan/"/>
    <id>https://anotherbug.com/2013/05/27/what-to-do-next-for-your-GTD-plan/</id>
    <published>2013-05-27T07:00:00.000Z</published>
    <updated>2016-12-13T00:45:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>GTD 下一步行动计划</p>
<p>A simple pictures shows your GTD plan for next step：</p>
<p><img src="/assets/images/2013/05/27/wtd.png" alt="GTD Next"> </p>
<p>That’s it!!</p>
]]></content>
    
    <summary type="html">
    
      如何根据事情的轻重缓急设定执行顺序，也就是GTD 的下一步计划如何选择的标准。
    
    </summary>
    
      <category term="Personal" scheme="https://anotherbug.com/categories/Personal/"/>
    
    
      <category term="GTD" scheme="https://anotherbug.com/tags/GTD/"/>
    
  </entry>
  
  <entry>
    <title>How to use wget to donwload the whole web folder</title>
    <link href="https://anotherbug.com/2013/05/20/how-to-use-wget-to-download-the-whole-web-folder/"/>
    <id>https://anotherbug.com/2013/05/20/how-to-use-wget-to-download-the-whole-web-folder/</id>
    <published>2013-05-20T07:00:00.000Z</published>
    <updated>2016-12-13T00:45:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>如何使用wget下载整个网站的文件夹<br>How to use wget to donwload the whole web folder</p>
<p>使用如下命令：</p>
<pre><code>wget -r -p -E -k -nH -np --cut-dirs=1 -P ~/Downloads/  http://99.198.110.38/Chinese/MP3s/13%E6%97%A7%E7%BA%A6%E8%AE%B2%E9%81%93/
</code></pre><p>That’s it!!</p>
]]></content>
    
    <summary type="html">
    
      如何使用wget下载整个网站的文件夹
    
    </summary>
    
      <category term="Technique" scheme="https://anotherbug.com/categories/Technique/"/>
    
    
      <category term="Ubuntu" scheme="https://anotherbug.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="https://anotherbug.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>How to install third party beamer theme</title>
    <link href="https://anotherbug.com/2013/05/18/how-to-install-third-party-beamer-theme/"/>
    <id>https://anotherbug.com/2013/05/18/how-to-install-third-party-beamer-theme/</id>
    <published>2013-05-18T07:00:00.000Z</published>
    <updated>2016-12-13T00:44:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>如何安装第三方的Beamer theme<br>How to install third party beamer theme </p>
<p>为了安装<code>Beamer</code> theme 文件不破坏原有的TDS (Tex Directory Structure) ，可以将需要的第三方theme安装到如下目录：</p>
<pre><code>~/Library/texmf/tex/latex/beamer/
</code></pre><p>使用时，比如theme的文件名是 <code>beamerthememy1.sty</code>，那么在tex文件中可以如下引用：</p>
<pre><code>\usetheme{my1}
</code></pre><p>因为所有的beamer theme文件默认以<code>beamertheme</code> 开头。</p>
<p>That’s it!!</p>
]]></content>
    
    <summary type="html">
    
      如何安装第三方的Beamer theme
    
    </summary>
    
      <category term="Technique" scheme="https://anotherbug.com/categories/Technique/"/>
    
    
      <category term="Latex" scheme="https://anotherbug.com/tags/Latex/"/>
    
  </entry>
  
  <entry>
    <title>How to create Schulte Grid using Excel</title>
    <link href="https://anotherbug.com/2013/04/29/how-to-create-schulte-grid-using-excel/"/>
    <id>https://anotherbug.com/2013/04/29/how-to-create-schulte-grid-using-excel/</id>
    <published>2013-04-29T07:00:00.000Z</published>
    <updated>2016-12-13T00:43:20.000Z</updated>
    
    <content type="html"><![CDATA[<hr>
<p>如何用Excel做舒尔特方格</p>
<h2 id="什么是舒尔特方格"><a href="#什么是舒尔特方格" class="headerlink" title="什么是舒尔特方格"></a>什么是舒尔特方格</h2><p>舒尔特方格 (Schulte Grid) 是在一张方形卡片上画上 1cm × 1cm 的 25 个方格，格子内任意填写上阿拉伯数字 1 ~ 25 等共 25 个数字。训练时，要求被测者用手指按 1 ~ 25 的顺序依次指出其位置，同时诵读出声，施测者一旁记录所用时间。数完 25 个数字所用时间越短，注意力水平越高。</p>
<h2 id="如何用Excel做舒尔特方格"><a href="#如何用Excel做舒尔特方格" class="headerlink" title="如何用Excel做舒尔特方格"></a>如何用Excel做舒尔特方格</h2><ol>
<li><p>新建一个Excel文件；在sheet2 的A1到A25单元格中输入1-25各数;B1到B25单元格中输入随机数公式：    <code>=Rand()</code></p>
<p> <img src="/assets/images/2013/04/29/shulte-grid_1.jpg" alt="Schulte Grid"></p>
</li>
</ol>
<ol>
<li><p>在sheet1的A1到E5单元格中分别用等号引用sheet2 A列中的25个单元格数据；Excel中从一个sheet引用另外一个sheet单元格的方式如下：</p>
<p> <code>=Sheet2!A1</code></p>
<p> <img src="/assets/images/2013/04/29/shulte-grid_2.jpg" alt="Schulte Grid"></p>
</li>
</ol>
<ol>
<li><p>在sheet2 中对数据进行排序操作，排序依据为B列，这样在sheet1 中就得到了随机排列的1-25各数。</p>
<p> <img src="/assets/images/2013/04/29/shulte-grid_3.jpg" alt="Schulte Grid"></p>
</li>
</ol>
<p>That’s it!!</p>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;如何用Excel做舒尔特方格&lt;/p&gt;
&lt;h2 id=&quot;什么是舒尔特方格&quot;&gt;&lt;a href=&quot;#什么是舒尔特方格&quot; class=&quot;headerlink&quot; title=&quot;什么是舒尔特方格&quot;&gt;&lt;/a&gt;什么是舒尔特方格&lt;/h2&gt;&lt;p&gt;舒尔特方格 (Schulte Grid
    
    </summary>
    
      <category term="Personal" scheme="https://anotherbug.com/categories/Personal/"/>
    
    
      <category term="Life" scheme="https://anotherbug.com/tags/Life/"/>
    
  </entry>
  
</feed>
